%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.17
%%CreationDate: Wed Aug 27 23:23:10 2025
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGGGUG___UC___GU_C_C_C_UGGU_GGGGCGCCCGGUCUUCAAAACCG_G__U__GGGGG___GCGGCAG_____CGGCCCUG_______________GUGGGUUCGAUUCCCA__CUCUCUUCC____\
) } def
/len { sequence length } bind def

/coor [
[95.97834778 268.96463013]
[107.10674286 257.97857666]
[105.72271729 243.04257202]
[104.33869171 228.10655212]
[102.95466614 213.17054749]
[101.57064056 198.23452759]
[100.18661499 183.29852295]
[87.26384735 182.31930542]
[74.64936829 179.34748840]
[62.64852142 174.45498657]
[51.55180359 167.76023865]
[41.62781525 159.42530823]
[33.11677933 149.65191650]
[26.22470665 138.67666626]
[22.94614220 142.96832275]
[18.75037956 145.28044128]
[14.57042599 145.60038757]
[11.20259285 144.29760742]
[-3.01981688 149.06446838]
[-10.23990440 154.80870056]
[-17.62611389 153.77307129]
[-24.97695351 159.34899902]
[-32.33727264 158.14303589]
[-39.81494522 163.54768372]
[-47.14544296 162.17204285]
[-54.93564987 175.92297363]
[-70.18960571 180.05726624]
[-83.85741425 172.12211609]
[-87.83019257 156.82530212]
[-79.75097656 143.24215698]
[-64.41301727 139.43132019]
[-50.91604996 147.65368652]
[-36.44221497 143.71565247]
[-22.06320572 139.44435120]
[-7.78668833 134.84205627]
[6.43572140 130.07519531]
[20.48445511 124.81847382]
[17.25626183 90.40039825]
[28.27874756 57.63562393]
[16.00251770 49.01621628]
[3.62755537 40.53916931]
[-8.74740696 32.06212234]
[-21.12236977 23.58507729]
[-36.13513947 27.96123505]
[-50.42763138 21.61626053]
[-57.25136566 7.54605722]
[-53.38438797 -7.60585642]
[-40.65256119 -16.68520927]
[-25.06747055 -15.40500927]
[-13.98791409 -4.36972666]
[-12.64532280 11.21011543]
[-0.27036056 19.68716049]
[12.10460186 28.16420746]
[24.47956276 36.64125443]
[31.84156990 37.83685684]
[37.03936768 45.45976639]
[46.47148514 36.17699051]
[57.25468063 28.50513077]
[69.11678314 22.63782883]
[81.75839233 18.72317505]
[94.86042786 16.85997772]
[108.09218597 17.09526443]
[121.11968994 19.42309761]
[126.21379852 5.31458712]
[131.30790710 -8.79392338]
[136.40200806 -22.90243340]
[135.43919373 -28.21659279]
[136.55718994 -32.87495804]
[139.13676453 -36.17953110]
[142.36842346 -37.79071045]
[148.42724609 -51.51261520]
[138.85279846 -63.45367050]
[135.93572998 -78.47862244]
[140.34634399 -93.13485718]
[151.07110596 -104.05446625]
[165.64555359 -108.72821808]
[180.72059631 -106.08210754]
[192.83207703 -96.72419739]
[199.19688416 -82.80486298]
[198.35241699 -67.52266693]
[190.49275208 -54.38934708]
[177.42395020 -46.42284393]
[162.14915466 -45.45380020]
[156.09033203 -31.73189354]
[150.51052856 -17.80832672]
[145.41641235 -3.69981647]
[140.32231140 10.40869427]
[135.22819519 24.51720428]
[141.59828186 27.83171082]
[147.65922546 31.68252754]
[153.36599731 36.04103470]
[158.67617798 40.87484360]
[163.55032349 46.14803314]
[167.95220947 51.82141495]
[171.84910583 57.85282898]
[175.21208191 64.19745636]
[178.01611328 70.80814362]
[180.24038696 77.63576508]
[181.86836243 84.62958527]
[182.88795471 91.73763275]
[183.29156494 98.90707397]
[183.07620239 106.08464050]
[182.24348450 113.21698761]
[180.79957581 120.25111389]
[178.75521851 127.13475037]
[176.12559509 133.81674194]
[189.22993469 141.11579895]
[202.33427429 148.41487122]
[215.43861389 155.71394348]
[229.98355103 149.97123718]
[244.80052185 154.97041321]
[252.89337158 168.35096741]
[250.44093323 183.79505920]
[238.60116577 194.01042175]
[222.96443176 194.17369080]
[210.91392517 184.20777893]
[208.13954163 168.81826782]
[195.03520203 161.51921082]
[181.93086243 154.22013855]
[168.82653809 146.92106628]
[160.58789062 157.16455078]
[150.84033203 165.98439026]
[139.82662964 173.16090393]
[127.82106018 178.51539612]
[115.12262726 181.91448975]
[116.50665283 196.85050964]
[117.89067841 211.78651428]
[119.27470398 226.72253418]
[120.65872955 241.65855408]
[122.04275513 256.59457397]
[135.00033569 265.34869385]
[139.24964905 280.39785767]
[132.78428650 294.63629150]
[118.65699768 301.34106445]
[103.53825378 297.34634399]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 130]
[3 129]
[4 128]
[5 127]
[6 126]
[7 125]
[14 37]
[18 36]
[19 35]
[21 34]
[23 33]
[25 32]
[39 56]
[40 54]
[41 53]
[42 52]
[43 51]
[63 88]
[64 87]
[65 86]
[66 85]
[70 84]
[71 83]
[106 120]
[107 119]
[108 118]
[109 117]
] def

init

% Start Annotations
25 32 0.32 0.2 colorpair
40 54 0.48 1 colorpair
41 53 0.48 1 colorpair
42 52 0.16 1 colorpair
108 118 0.48 1 colorpair
109 117 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 130 36 gmark
2 cmark
130 cmark
3 129 16 gmark
3 cmark
129 cmark
4 128 10 gmark
4 cmark
128 cmark
5 127 5 gmark
5 cmark
127 cmark
6 126 10 gmark
6 cmark
126 cmark
7 125 12 gmark
7 cmark
125 cmark
14 37 3 gmark
14 cmark
37 cmark
18 36 10 gmark
18 cmark
36 cmark
19 35 16 gmark
19 cmark
35 cmark
21 34 17 gmark
21 cmark
34 cmark
23 33 9 gmark
23 cmark
33 cmark
25 32 2 gmark
25 cmark
32 cmark
39 56 21 gmark
39 cmark
56 cmark
40 cmark
54 cmark
41 cmark
53 cmark
42 cmark
52 cmark
43 51 3 gmark
43 cmark
51 cmark
63 88 26 gmark
63 cmark
88 cmark
64 87 18 gmark
64 cmark
87 cmark
65 86 15 gmark
65 cmark
86 cmark
66 85 30 gmark
66 cmark
85 cmark
70 84 31 gmark
70 cmark
84 cmark
71 83 52 gmark
71 cmark
83 cmark
106 120 9 gmark
106 cmark
120 cmark
107 119 8 gmark
107 cmark
119 cmark
108 cmark
118 cmark

% End Annotations
showpage
end
%%EOF
